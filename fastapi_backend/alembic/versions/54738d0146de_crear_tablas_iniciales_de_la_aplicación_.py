"""Crear tablas iniciales de la aplicaciÃ³n (metadata fix)

Revision ID: 54738d0146de
Revises: 
Create Date: 2025-08-16 15:01:02.123456

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '54738d0146de'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("CREATE SCHEMA IF NOT EXISTS pos")
    op.create_table('subscription_products',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('image', sa.String(), nullable=True),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='pos'
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('avatar_url', sa.String(), nullable=True),
    sa.Column('billing_address', sa.JSON(), nullable=True),
    sa.Column('payment_method', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='pos'
    )
    op.create_table('businesses',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('tax_number', sa.String(), nullable=True),
    sa.Column('owner_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['pos.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='pos'
    )
    op.create_table('customers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('stripe_customer_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['pos.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='pos'
    )
    op.create_table('prices',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('product_id', sa.String(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('unit_amount', sa.BigInteger(), nullable=True),
    sa.Column('currency', sa.String(length=3), nullable=True),
    sa.Column('type', sa.Enum('one_time', 'recurring', name='pricing_type'), nullable=True),
    sa.Column('interval', sa.Enum('day', 'week', 'month', 'year', name='pricing_plan_interval'), nullable=True),
    sa.Column('interval_count', sa.Integer(), nullable=True),
    sa.Column('trial_period_days', sa.Integer(), nullable=True),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['pos.subscription_products.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='pos'
    )
    op.create_table('business_locations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('business_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['business_id'], ['pos.businesses.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='pos'
    )
    op.create_table('products',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('business_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('sku', sa.String(), nullable=True),
    sa.Column('barcode', sa.String(), nullable=True),
    sa.Column('unit_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('cost_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('tax_rate', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['business_id'], ['pos.businesses.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='pos'
    )
    op.create_table('subscriptions',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.Enum('trialing', 'active', 'canceled', 'incomplete', 'incomplete_expired', 'past_due', 'unpaid', 'paused', name='subscription_status'), nullable=True),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('price_id', sa.String(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('cancel_at_period_end', sa.Boolean(), nullable=True),
    sa.Column('created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('current_period_start', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('current_period_end', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('ended_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('cancel_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('canceled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('trial_start', sa.DateTime(timezone=True), nullable=True),
    sa.Column('trial_end', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['price_id'], ['pos.prices.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['pos.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='pos'
    )
    op.create_table('inventory',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('product_id', sa.UUID(), nullable=False),
    sa.Column('location_id', sa.UUID(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['pos.business_locations.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['pos.products.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='pos'
    )
    op.create_table('stock_transfers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('business_id', sa.UUID(), nullable=False),
    sa.Column('from_location_id', sa.UUID(), nullable=False),
    sa.Column('to_location_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['business_id'], ['pos.businesses.id'], ),
    sa.ForeignKeyConstraint(['from_location_id'], ['pos.business_locations.id'], ),
    sa.ForeignKeyConstraint(['to_location_id'], ['pos.business_locations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='pos'
    )
    op.create_table('stock_transfer_items',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('transfer_id', sa.UUID(), nullable=False),
    sa.Column('product_id', sa.UUID(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['pos.products.id'], ),
    sa.ForeignKeyConstraint(['transfer_id'], ['pos.stock_transfers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='pos'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('stock_transfer_items', schema='pos')
    op.drop_table('stock_transfers', schema='pos')
    op.drop_table('inventory', schema='pos')
    op.drop_table('subscriptions', schema='pos')
    op.drop_table('products', schema='pos')
    op.drop_table('business_locations', schema='pos')
    op.drop_table('prices', schema='pos')
    op.drop_table('customers', schema='pos')
    op.drop_table('businesses', schema='pos')
    op.drop_table('users', schema='pos')
    op.drop_table('subscription_products', schema='pos')
    op.execute("DROP SCHEMA IF EXISTS pos")
    # ### end Alembic commands ###
