"""Add medical appointment models

Revision ID: 1a2b3c4d5e6f
Revises: 3fa3261d0d62
Create Date: 2025-08-18 12:00:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1a2b3c4d5e6f'
down_revision: Union[str, Sequence[str], None] = '3fa3261d0d62'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    userrole = postgresql.ENUM('DOCTOR', 'PATIENT', 'ADMIN', name='userrole')
    userrole.create(op.get_bind())
    op.add_column('users', sa.Column('role', sa.Enum('DOCTOR', 'PATIENT', 'ADMIN', name='userrole'), nullable=False, server_default='PATIENT'), schema='pos')
    
    op.create_table('patients',
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('user_id', sa.UUID(), nullable=False),
        sa.Column('medical_history', sa.Text(), nullable=True),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(['user_id'], ['pos.users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        schema='pos'
    )
    
    appointmentstatus = postgresql.ENUM('PENDING_PAYMENT', 'ACTIVE', 'COMPLETED', 'CANCELLED', name='appointmentstatus')
    appointmentstatus.create(op.get_bind())
    documenttype = postgresql.ENUM('PRESCRIPTION', 'EXAM_ORDER', 'EXAM_RESULT', 'MEDICAL_REPORT', name='documenttype')
    documenttype.create(op.get_bind())

    op.create_table('appointments',
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('doctor_id', sa.UUID(), nullable=False),
        sa.Column('patient_id', sa.UUID(), nullable=False),
        sa.Column('status', sa.Enum('PENDING_PAYMENT', 'ACTIVE', 'COMPLETED', 'CANCELLED', name='appointmentstatus'), nullable=False, server_default='PENDING_PAYMENT'),
        sa.Column('appointment_datetime', sa.DateTime(timezone=True), nullable=False),
        sa.Column('reason', sa.Text(), nullable=True),
        sa.Column('stripe_payment_intent_id', sa.String(), nullable=True),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(['doctor_id'], ['pos.users.id'], ),
        sa.ForeignKeyConstraint(['patient_id'], ['pos.patients.id'], ),
        sa.PrimaryKeyConstraint('id'),
        schema='pos'
    )
    
    op.create_table('appointment_documents',
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('appointment_id', sa.UUID(), nullable=False),
        sa.Column('document_type', sa.Enum('PRESCRIPTION', 'EXAM_ORDER', 'EXAM_RESULT', 'MEDICAL_REPORT', name='documenttype'), nullable=False),
        sa.Column('content', sa.Text(), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(['appointment_id'], ['pos.appointments.id'], ),
        sa.PrimaryKeyConstraint('id'),
        schema='pos'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('appointment_documents', schema='pos')
    op.drop_table('appointments', schema='pos')
    op.drop_table('patients', schema='pos')
    
    op.drop_column('users', 'role', schema='pos')
    
    userrole = postgresql.ENUM('DOCTOR', 'PATIENT', 'ADMIN', name='userrole')
    userrole.drop(op.get_bind())
    appointmentstatus = postgresql.ENUM('PENDING_PAYMENT', 'ACTIVE', 'COMPLETED', 'CANCELLED', name='appointmentstatus')
    appointmentstatus.drop(op.get_bind())
    documenttype = postgresql.ENUM('PRESCRIPTION', 'EXAM_ORDER', 'EXAM_RESULT', 'MEDICAL_REPORT', name='documenttype')
    documenttype.drop(op.get_bind())
    # ### end Alembic commands ###
